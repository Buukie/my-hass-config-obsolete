################################################
## Packages / Thermostats
################################################
homeassistant:
  customize:
    sensor.living_room_thermostat_temperature:
      friendly_name: Temperatuur Nest
    sensor.living_room_thermostat_target:
      friendly_name: Target Temperatuur Nest
    sensor.living_room_thermostat_operation_mode:
      friendly_name: Status Nest
    sensor.living_room_thermostat_humidity:
      friendly_name: Luchtvochtigheid Nest
      icon: mdi:water-percent
    input_number.woonkamer_nest_thermostat_temperature:
      friendly_name: "Temperatuur Woonkamer Nest"

################################################
## Climate
################################################
climate:
  platform: nest

################################################
## Input Number
################################################
input_number:
  woonkamer_nest_thermostat_temperature:
    min: 15
    max: 25
    step: 0.5

################################################
## Sensor
################################################
sensor:
  - platform: nest
    monitored_conditions:
      - 'temperature'
      - 'target'
      - 'humidity'
      - 'mode'
      - 'weather_condition'
      - 'weather_temperature'
      - 'weather_humidity'
      - 'wind_speed'
      - 'wind_direction'
      - 'battery_level'
      - 'co_status'
      - 'smoke_status'

  - platform: template
    sensors:
      woonkamer_nest_thermostat_temperature:
        value_template: "{{ states('input_number.woonkamer_nest_thermostat_temperature') | float }}"
      woonkamer_nest_thermostat_target_vs_current:
        value_template: >-
          {%- if states('sensor.living_room_thermostat_temperature') | float != states('sensor.living_room_thermostat_target') | float -%}
            true
          {%- else -%}
            false
          {%- endif -%}
      woonkamer_nest_thermostat_temperature_changed:
        value_template: >-
          {%- if states('input_number.woonkamer_nest_thermostat_temperature') | float != states('sensor.living_room_thermostat_target') | float -%}
            true
          {%- else -%}
            false
          {%- endif -%}

################################################
## Automation
################################################
automation:
  - alias: "Slider - Woonkamer - Nest thermostat - Set value"
    initial_state: on
    trigger:
    - platform: state
      entity_id: sensor.woonkamer_nest_thermostat_temperature_changed
      to: 'true'
      for:
        seconds: 60
    - platform: homeassistant
      event: start
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.woonkamer_nest_thermostat_temperature
        value: "{{ states('sensor.living_room_thermostat_target') | float }}"

  - alias: "Switch - Woonkamer - Nest thermostat - On"
    trigger:
    - platform: state
      entity_id: input_number.woonkamer_nest_thermostat_temperature
    action:
    - service: climate.set_operation_mode
      data:
        entity_id: climate.living_room
        operation_mode: heat
    - service: climate.set_temperature
      data_template:
        entity_id: climate.living_room
        temperature: "{{ states('input_number.woonkamer_nest_thermostat_temperature') | float }}"

  - alias: "Switch - Woonkamer - Nest thermostat - On"
    trigger:
    - platform: time
      at: '5:00:00'
    condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_boolean.automation_mode
        state: 'off'
      - condition: state
        entity_id: 'input_boolean.vacation_mode'
        state: 'off'
    action:
    - service: climate.set_operation_mode
      data:
        entity_id: climate.living_room
        operation_mode: heat
    - service: climate.set_temperature
      data:
        entity_id: climate.living_room
        temperature: 21

  - alias: "Switch - Woonkamer - Nest thermostat - Off"
    trigger:
    - platform: state
      entity_id: input_boolean.vacation_mode
      to: 'on'
    - platform: time
      at: '00:00:00'
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: input_boolean.automation_mode
        state: 'off'
    action:
    - service: climate.set_temperature
      data:
        entity_id: climate.living_room
        temperature: 17