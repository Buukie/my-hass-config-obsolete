################################################
## Packages / Time
################################################
homeassistant:
  customize:
    sun.sun:
      friendly_name: " "
    sensor.sunrise_time:
      icon: mdi:weather-sunset-up
    sensor.sunset_time:
      icon: mdi:weather-sunset-down

################################################
## Sun
################################################
sun:
  elevation: !secret home_elevation

################################################
## Sensor
################################################
sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'
      - 'time_utc'
      - 'beat'

  - platform: season
    type: astronomical

  - platform: moon

  - platform: uptime

  - platform: template
    sensors:
      time_of_day:
        friendly_name: 'Time of Day'
        entity_id: sensor.time_date
        value_template: >-
          {% if   now().strftime("%H:%M") < "06:00" %} late night
          {% elif now().strftime("%H:%M") < "08:00" %} early morning
          {% elif now().strftime("%H:%M") < "10:30" %} morning
          {% elif now().strftime("%H:%M") < "13:00" %} lunchtime
          {% elif now().strftime("%H:%M") < "16:00" %} afternoon
          {% elif now().strftime("%H:%M") < "19:00" %} evening
          {% elif now().strftime("%H:%M") < "22:00" %} late evening
          {% elif now().strftime("%H:%M") < "24:00" %} night
          {% endif %}
      time_of_day_short:
        friendly_name: 'Time of Day Short'
        entity_id: sensor.time_date
        value_template: >-
          {% if   now().strftime("%H:%M") < "06:00" %} night
          {% elif now().strftime("%H:%M") < "18:00" %} daytime
          {% elif now().strftime("%H:%M") < "21:00" %} early evening
          {% elif now().strftime("%H:%M") < "24:00" %} evening
          {% endif %}
      day_of_year:
        friendly_name: "Day Number"
        entity_id: sensor.time_date
        value_template: '{{ now().strftime("%j") }}'
      week_of_year:
        friendly_name: "Week Number"
        entity_id: sensor.time_date
        value_template: '{{ now().strftime("%U") }}'


################################################
## Automation
################################################
automation:
# - alias: Notify on sunrise
#   trigger:
#   - platform: sun
#     event: sunrise
#     offset: '+00:00:00'
#   action:
#   - service: notify.bram
#     data:
#       message: "The sun is up. Wake Up! {{ states('sensor.date__time') }}"
## - alias: Notify on sunset
#   trigger:
#   - platform: sun
#     event: sunset
#     offset: '+00:00:00'
#   action:
#   - service: notify.bram
#     data:
#        message: "Oh wow you really missed something great. {{ states('sensor.date__time') }}"

  - alias: Season Change Notification
    initial_state: true
    hide_entity: true
    trigger:
    - platform: state
      entity_id: sensor.season
    condition:
    - condition: template
      value_template: '{{ trigger.from_state.state | lower != "unknown" }}'
    action:
    - service: script.notify_me
      data:
        title: "Season Change"
        message: "Good bye {{ trigger.from_state.state }}, and Say Hello to {{ trigger.to_state.state }}!"

  - alias: 'Notify - Full Moon'
    trigger:
    - platform: sun
      event: sunset
      offset: "01:00:00"
    condition:
    - condition: state
      entity_id: sensor.moon
      state: 'Full moon'
    action:
    - service: notify.bram
      data:
        title: "Hail Satan"
        message: "Rejoice, the full moon is upon us."