################################################
## Packages / pi-hole
################################################

################################################
## Customize
################################################
homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'pi_hole'
      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    switch.pihole:
      <<: *customize
      friendly_name: Pi-Hole
      entity_picture: /local/icons/pihole/pihole.png

    sensor.ads_percentage_today:
      <<: *customize
      friendly_name: Percentage of Ad Traffic Blocked
      unit_of_measurement: '%'
      icon: mdi:ticket-percent

    sensor.domains_being_blocked:
      <<: *customize
      friendly_name: Total Domains Blocking
      icon: mdi:do-not-disturb

    sensor.ads_blocked_today:
      <<: *customize
      friendly_name: Ads Blocked Today
      icon: mdi:do-not-disturb

    sensor.dns_queries_today:
      <<: *customize
      friendly_name: DNS Queries Today
      icon: mdi:note-text

    sensor.unique_domains:
      <<: *customize
      friendly_name: Unique Domains
      icon: mdi:approval

    sensor.queries_forwarded:
      <<: *customize
      friendly_name: Queries Forwarded
      icon: mdi:arrange-send-backward

    sensor.queries_cached:
      <<: *customize
      friendly_name: Queries Cached
      icon: mdi:animation

    script.ad_blocker:
      <<: *customize
      friendly_name: Ad Blocker
      emulated_hue_hidden: false

    script.pihole_off:
      <<: *customize
      friendly_name: Turn Pi-Hole Off
      icon: mdi:do-not-disturb

    script.pihole_on:
      <<: *customize
      friendly_name: Turn Pi-Hole On
      icon: mdi:power

    sensor.pihole_dns:
      <<: *customize
      friendly_name: DNS Service

    sensor.pihole_blocking:
      <<: *customize
      friendly_name: Ad Blocking

    sensor.pi_hole_version:
      <<: *customize
      friendly_name: Version

    sensor.pihole_status_raw:
      <<: *customize
      hidden: true

################################################
## Sensor
################################################
sensor:
  - platform: rest
    name: dns_queries_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.dns_queries_today }}'

  - platform: rest
    name: domains_being_blocked
    resource: !secret pi_hole_url
    value_template: '{{ value_json.domains_being_blocked }}'

  - platform: rest
    name: ads_blocked_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.ads_blocked_today }}'

  - platform: rest
    name: ads_percentage_today
    resource: !secret pi_hole_url
    value_template: '{{ value_json.ads_percentage_today | int }}'

  - platform: rest
    name: unique_domains
    resource: !secret pi_hole_url
    value_template: '{{ value_json.unique_domains }}'

  - platform: rest
    name: queries_forwarded
    resource: !secret pi_hole_url
    value_template: '{{ value_json.queries_forwarded }}'

  - platform: rest
    name: queries_cached
    resource: !secret pi_hole_url
    value_template: '{{ value_json.queries_cached }}'

  - platform: command_line
    command: !secret pi_hole_current_version
    name: 'pihole_version_current'
    value_template: '{{ value[28:] }}'
    scan_interval: 86400

  - platform: command_line
    command: !secret pi_hole_latest_version
    name: 'pihole_version_latest'
    value_template: '{{ value[27:] }}'
    scan_interval: 86400

  - platform: template
    sensors:
      pi_hole_version:
        value_template: "{%- if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state -%}{{states.sensor.pihole_version_current.state}} {% else %}{{states.sensor.pihole_version_latest.state}} Available{% endif%}"
        icon_template: >-
          {% if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}

  - platform: command_line
    command: !secret pi_hole_status_raw
    name: 'pihole_status_raw'
    scan_interval: 60

  - platform: template
    sensors:
      pihole_dns:
        value_template: >-
          {%-set dns = states.sensor.pihole_status_raw.state.split('[')[1][3:-3]-%}
          {%-if dns == 'DNS service is running'-%}
            DNS service is running
          {%-elif dns != 'DNS service is running'-%}
            DNS service is Disabled
          {%-else-%}
          unknown
          {%- endif -%}
        icon_template: >-
          {%- if states.sensor.pihole_status_raw.state.split('[')[1][3:-3] == 'DNS service is running' -%}
            mdi:checkbox-marked
          {%- else -%}
            mdi:checkbox-blank-outline
          {%- endif -%}
  - platform: template
    sensors:
      pihole_blocking:
        value_template: >-
          {%-set blocking = states.sensor.pihole_status_raw.state.split('[')[2][3:]-%}
          {%-if blocking == 'Pi-hole blocking is Enabled'-%}
            Pi-hole blocking is Enabled
          {%-elif blocking != 'Pi-hole blocking is Enabled'-%}
            Pi-hole blocking is Disabled
          {%-else-%}
            unknown
          {%- endif -%}
        icon_template: >-
          {%- if states.sensor.pihole_blocking.state == 'Pi-hole blocking is Enabled' -%}
            mdi:checkbox-marked
          {%-elif states.sensor.pihole_blocking.state == 'Unknown'-%}
            mdi:checkbox-blank-outline
          {%- else -%}
            mdi:checkbox-blank-outline
          {%- endif -%}
  - platform: template
    sensors:
      pihole_status:
        value_template: >-
          {% if states.sensor.pihole_blocking.state == 'Pi-hole blocking is Enabled' %}
            True
          {% else %}
            False
          {% endif %}

################################################
## Switch
################################################
switch:
  - platform: template
    switches:
      pihole:
        value_template: '{{ states.sensor.pihole_status.state }}'
        turn_on:
          service: script.turn_on
          entity_id: script.pihole_on
        turn_off:
          service: script.turn_on
          entity_id: script.pihole_off

#switch:
#  - platform: command_line
#    switches:
#      pihole:
#        #value_template: '{{ states.sensor.pihole_status.state }}'
#        command_on: !secret pi_hole_switch_on
#        command_off: !secret pi_hole_switch_off
#        #command_state: !secret pi_hole_status_raw

################################################
## Script
################################################
script:
  ad_blocker:
    sequence:
      - service: switch.toggle
        entity_id: switch.pihole
  pihole_on:
    sequence:
       - service: shell_command.pihole_on
  pihole_off:
    sequence:
       - service: shell_command.pihole_off

################################################
## Shell Command
################################################
shell_command:
  pihole_on: !secret pi_hole_switch_on
  pihole_off: !secret pi_hole_switch_off
