################################################
## Packages / Power Plugs
################################################
homeassistant:
  customize:
    switch.wasmachine:
      friendly_name: Wasmachine
    switch.tuin:
      friendly_name: Tuinverlichting
    switch.droger:
      friendly_name: Droger
    switch.meterkast:
      friendly_name: Meterkast
    switch.tv_woonkamer:
      friendly_name: TV Woonkamer
    switch.tv_woonkamer_verlichting:
      friendly_name: TV Woonkamer Verlichting
    switch.tv_slaapkamer:
      friendly_name: TV Slaapkamer
    switch.boris:
      friendly_name: Verlichting Boris

    sensor.wasmachine_watts:
      friendly_name: Huidig verbruik wasmachine
      icon: mdi:washing-machine
    sensor.droger_watts:
      friendly_name: Huidig verbruik droger
      icon: mdi:tumble-dryer

    sensor.wasmachine_status_time:
      friendly_name: Wasmachine draaitijd
      icon: mdi:washing-machine
    sensor.wasmachine_status_value:
      friendly_name: Wasmachine status
      icon: mdi:washing-machine
    sensor.droger_status_time:
      friendly_name: Droger draaitijd
      icon: mdi:tumble-dryer
    sensor.droger_status_value:
      friendly_name: Droger status
      icon: mdi:tumble-dryer

    sensor.wasmachine_this_week:
      friendly_name: Weekly Wasmachine Running Hours
      icon: mdi:washing-machine
    sensor.wasmachine_this_month:
      friendly_name: Monthly Wasmachine Running Hours
      icon: mdi:washing-machine
    sensor.droger_this_week:
      friendly_name: Weekly Droger Running Hours
      icon: mdi:tumble-dryer
    sensor.droger_this_month:
      friendly_name: Monthly Droger Running Hours
      icon: mdi:tumble-dryer

    sensor.percent_wasmachine_weekly:
      friendly_name: Weekly Wasmachine
      icon: mdi:washing-machine
    sensor.percent_wasmachine_monthly:
      friendly_name: Monthly Wasmachine
      icon: mdi:washing-machine
    sensor.percent_droger_weekly:
      friendly_name: Weekly Droger
      icon: mdi:tumble-dryer
    sensor.percent_droger_monthly:
      friendly_name: Monthly Droger
      icon: mdi:tumble-dryer

################################################
## TP-Link
################################################
tplink:
  discovery: false
  switch:
    - host: 192.168.1.171
    - host: 192.168.1.172
    - host: 192.168.1.173
    - host: 192.168.1.174
    - host: 192.168.1.175
    - host: 192.168.1.176
    - host: 192.168.1.177
    - host: 192.168.1.178
    - host: 192.168.1.179


################################################
## Group
################################################
group:
  hometracking:
    name: Household Tracking
    view: no
    entities:
      - device_tracker.taipan5g
      - device_tracker.lieke_iphone

################################################
## Inputs
################################################
input_boolean:
  wasmachine:
    name: Wasmachine status
    initial: off
    icon: mdi:washing-machine
  droger:
    name: Droger status
    initial: off
    icon: mdi:tumble-dryer

input_number:
  wasmachine_start:
    name: Wasmachine start
    min: 0
    max: 999999999
  wasmachine_stop:
    name: Wasmachine stop
    min: 0
    max: 999999999
  droger_start:
    name: Droger start
    min: 0
    max: 999999999
  droger_stop:
    name: Droger stop
    min: 0
    max: 999999999

################################################
## Sensor
################################################
binary_sensor:
  - platform: ping
    host: !secret lgwebostv_host_1
    name: TV Ping Woonkamer
    scan_interval: 10
    count: 3

  - platform: ping
    host: !secret lgwebostv_host_2
    name: TV Ping Slaapkamer
    scan_interval: 10
    count: 3

sensor:
# VAATWASSER
  - platform: template
    sensors:
      meterkast_watts:
        friendly_name: "Huidig verbruik Meterkast"
        value_template: '{{ states.switch.meterkast.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      meterkast_kw:
        friendly_name: "Current KiloWatts"
        value_template: '{{ states.switch.meterkast.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      meterkast_amps:
        friendly_name: "Amps"
        value_template: '{{ states.switch.meterkast.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      meterkast_kw_today:
        friendly_name: "Today's KiloWatts"
        value_template: '{{ states.switch.meterkast.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      meterkast_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.meterkast.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'

  - platform: statistics
    name: Meterkast statistics
    entity_id: sensor.meterkast_watts

# TUIN
  - platform: template
    sensors:
      tuin_watts:
        friendly_name: "Huidig verbruik tuin"
        value_template: '{{ states.switch.tuin.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      tuin_kw:
        friendly_name: "Current KiloWatts"
        value_template: '{{ states.switch.tuin.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      tuin_amps:
        friendly_name: "Amps"
        value_template: '{{ states.switch.tuin.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      tuin_kw_today:
        friendly_name: "Today's KiloWatts"
        value_template: '{{ states.switch.tuin.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      tuin_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.tuin.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'

  - platform: statistics
    name: Tuin statistics
    entity_id: sensor.tuin_watts


# TV
  - platform: template
    sensors:
      tv_woonkamer_watts:
        friendly_name: "Huidig verbruik TV kast"
        value_template: '{{ states.switch.tv_woonkamer.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      tv_woonkamer_kw:
        friendly_name: "Current KiloWatts"
        value_template: '{{ states.switch.tv_woonkamer.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      tv_woonkamer_amps:
        friendly_name: "Amps"
        value_template: '{{ states.switch.tv_woonkamer.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      tv_woonkamer_kw_today:
        friendly_name: "Today's KiloWatts"
        value_template: '{{ states.switch.tv_woonkamer.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      tv_woonkamer_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.tv_woonkamer.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'

  - platform: statistics
    name: TV kast statistics
    entity_id: sensor.tv_woonkamer_watts

# WASMACHINE
  - platform: template
    sensors:
      wasmachine_watts:
        friendly_name: "Huidig verbruik wasmachine"
        value_template: '{{ states.switch.wasmachine.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      wasmachine_kw_today:
        friendly_name: "Today's KiloWatts"
        value_template: '{{ states.switch.wasmachine.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      wasmachine_amps:
        friendly_name: "Amps"
        value_template: '{{ states.switch.wasmachine.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      wasmachine_kw:
        friendly_name: "Current KiloWatts"
        value_template: '{{ states.switch.wasmachine.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      wasmachine_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.wasmachine.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'

  - platform: template
    sensors:
      wasmachine_verbruik:
        friendly_name: "Wasmachine verbruik"
        value_template: '{{ (float(states("input_number.wasmachine_stop")) - float(states("input_number.wasmachine_start"))) | round(3) }}'
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      wasmachine_status_time:
        friendly_name: "Wasmachine draaitijd"
        unit_of_measurement: 'minuten'
        value_template: >
          {% if is_state("input_boolean.wasmachine", "on") -%}
            {{ ((as_timestamp(now())-as_timestamp(states.input_boolean.wasmachine.last_changed))/60) | round | int }}
          {% else %}
            0
          {% endif %}
        entity_id: sensor.time
      wasmachine_status_value:
        friendly_name: "Wasmachine status"
        value_template: >-
          {%- if is_state('input_boolean.wasmachine', 'on') -%} Aan
          {%- else -%} Uit
          {%- endif -%}

  - platform: statistics
    name: Wasmachine statistics
    entity_id: sensor.wasmachine_watts

  - platform: template
    sensors:
      wasmachine_statistics_mean:
        friendly_name: Wasmachine statistics Mean
        value_template: "{{ state_attr('sensor.wasmachine_statistics','mean') }}"

# DROGER
  - platform: template
    sensors:
      droger_watts:
        friendly_name: "Huidig verbruik droger"
        value_template: '{{ states.switch.droger.attributes["current_power_w"] | replace(" W", "") | float }}'
        unit_of_measurement: 'W'
      droger_kw:
        friendly_name: "Current KiloWatts"
        value_template: '{{ states.switch.droger.attributes["total_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      droger_amps:
        friendly_name: "Amps"
        value_template: '{{ states.switch.droger.attributes["current_a"] | replace(" A", "") | float }}'
        unit_of_measurement: 'A'
      droger_kw_today:
        friendly_name: "Today's KiloWatts"
        value_template: '{{ states.switch.droger.attributes["today_energy_kwh"] | replace(" kW", "") | float }}'
        unit_of_measurement: 'kWh'
      droger_volts:
        friendly_name: "Current Voltage"
        value_template: '{{ states.switch.droger.attributes["voltage"] | replace(" V", "") | float }}'
        unit_of_measurement: 'V'

  - platform: template
    sensors:
      droger_verbruik:
        friendly_name: "Droger verbruik"
        value_template: '{{ (float(states("input_number.droger_stop")) - float(states("input_number.droger_start"))) | round(3) }}'
        unit_of_measurement: 'kWh'

  - platform: template
    sensors:
      droger_status_time:
        friendly_name: "Droger draaitijd"
        unit_of_measurement: 'minuten'
        value_template: >
          {% if is_state("input_boolean.droger", "on") -%}
            {{ ((as_timestamp(now())-as_timestamp(states.input_boolean.droger.last_changed))/60) | round | int }}
          {% else %}
            0
          {% endif %}
        entity_id: sensor.time
      droger_status_value:
        friendly_name: "Droger status"
        value_template: >-
          {%- if is_state('input_boolean.droger', 'on') -%} Aan
          {%- else -%} Uit
          {%- endif -%}

  - platform: statistics
    name: Droger statistics
    entity_id: sensor.droger_watts

  - platform: template
    sensors:
      droger_statistics_mean:
        friendly_name: Droger statistics Mean
        value_template: "{{ state_attr('sensor.droger_statistics','mean') }}"

################################################
## Automation
################################################
automation:

# WASMACHINE
  - alias: Action - Set wasmachine to running
    trigger:
    - platform: numeric_state
      entity_id: sensor.wasmachine_statistics_mean
      above: 5
      for:
        minutes: 5
    condition: []
    action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.wasmachine
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wasmachine_start
        value: "{{ states.sensor.wasmachine_kw_today.state }}"
    - service: notify.family
      data_template:
        title: 'Wasmachine:'
        message: "Wasprogramma gestart."
    - service: media_player.turn_on
      data:
        entity_id: media_player.living_room
    - delay: '00:00:03'
    - service: tts.google_say
      entity_id: media_player.living_room
      data:
        message: 'De wasmachine is gestart!'

  - alias: Action - Set wasmachine as finished
    trigger:
    - platform: numeric_state
      entity_id: sensor.wasmachine_statistics_mean
      below: 5
      for:
        minutes: 5
    condition:
    - condition: state
      entity_id: input_boolean.wasmachine
      state: 'on'
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wasmachine_stop
        value: "{{ states.sensor.wasmachine_kw_today.state }}"
    - service: notify.family
      data_template:
        title: 'Wasmachine:'
        message: "Wasprogramma gereed. Doorlooptijd: {{ ((as_timestamp(now())-as_timestamp(states.input_boolean.wasmachine.last_changed))/60) | round | int }} minuten. Verbruik: {{ states('sensor.wasmachine_verbruik') }} kWh."
    - service: media_player.turn_on
      data:
        entity_id: media_player.living_room
    - delay: '00:00:03'
    - service: tts.google_say
      entity_id: media_player.living_room
      data:
        message: 'De wasmachine is klaar!'
    - service: homeassistant.turn_off
      entity_id: input_boolean.wasmachine

# DROGER
  - alias: Action - Set droger to running
    trigger:
    - platform: numeric_state
      entity_id: sensor.droger_statistics_mean
      above: 5
      for:
        minutes: 5
    condition: []
    action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.droger
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wasmachine_start
        value: "{{ states.sensor.droger_kw_today.state }}"
    - service: notify.family
      data_template:
        title: 'Droger:'
        message: "Droger gestart."
    - delay: '00:00:03'
    - service: media_player.turn_on
      data:
        entity_id: media_player.living_room
    - service: tts.google_say
      entity_id: media_player.living_room
      data:
        message: 'De droger is gestart!'

  - alias: Action - Set droger as finished
    trigger:
    - platform: numeric_state
      entity_id: sensor.droger_statistics_mean
      below: 5
      for:
        minutes: 5
    condition:
    - condition: state
      entity_id: input_boolean.droger
      state: 'on'
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wasmachine_stop
        value: "{{ states.sensor.droger_kw_today.state }}"
    - service: notify.family
      data_template:
        title: 'Droger:'
        message: "Droger gereed. Doorlooptijd: {{ ((as_timestamp(now())-as_timestamp(states.input_boolean.droger.last_changed))/60) | round | int }} minuten. Verbruik: {{ states('sensor.droger_verbruik') }} kWh."
    - service: media_player.turn_on
      data:
        entity_id: media_player.living_room
    - delay: '00:00:03'
    - service: tts.google_say
      entity_id: media_player.living_room
      data:
        message: 'De droger is klaar!'
    - service: homeassistant.turn_off
      entity_id: input_boolean.droger

# GENERAL
  - alias: "General powerplugs On/Off"
    trigger:
    - platform: time_pattern
      minutes: '/10'
      seconds: 00
    - platform: state
      entity_id: sensor.hal_motion
      to: 'True'
    - platform: state
      entity_id: sensor.woonkamer_motion
      to: 'True'
    condition:
    - condition: state
      entity_id: input_boolean.automation_mode
      state: 'off'
    action:
    - service: script.turn_on
      data_template:
        entity_id: >-
          {%- if is_state('sensor.woonkamer_motion', 'True') and is_state('switch.tv_woonkamer', 'off') and states('sensor.time_of_day_short') in ['daytime','early evening','evening'] -%}
            script.woonkamer_switch_on
          {%- else -%}
            script.noop
          {%- endif -%}
#    - service: script.turn_on
#      data_template:
#        entity_id: >-
#          {%- if is_state('sensor.woonkamer_motion', 'False') and is_state('switch.tv_woonkamer', 'on') and is_state('binary_sensor.tv_ping_woonkamer', 'off') and is_state('media_player.livingroom_tv', 'off') and states('sensor.time_of_day_short') in ['night'] -%}
#            script.woonkamer_switch_off
#          {%- else -%}
#            script.noop
#          {%- endif -%}
    - service: script.turn_on
      data_template:
        entity_id: >-
          {%- if is_state('media_player.bedroom_tv', 'off') and is_state('switch.tv_slaapkamer', 'on') and is_state('binary_sensor.tv_ping_slaapkamer', 'off') -%}
            script.slaapkamer_switch_off
          {%- else -%}
            script.noop
          {%- endif -%}

  - alias: "TV Kast switch Off"
    trigger:
    - platform: state
      entity_id: sensor.woonkamer_motion
      to: 'False'
      for:
        hours: 4
        minutes: 00
    condition:
    - condition: state
      entity_id: input_boolean.automation_mode
      state: 'off'
    - condition: time
      after: '08:30:00'
      before: '16:00:00'
    action:
    - service: script.turn_on
      entity_id: script.woonkamer_switch_off

################################################
## Script
################################################
script:
  # woonkamer_switch:
  #   sequence:
  #   - service_template: >-
  #         {%- if states('sensor.time_of_day_short') in ['daytime','evening','night'] -%}homeassistant.turn_on
  #         {%- elif states('sensor.time_of_day_short') in ['evening','night'] -%}homeassistant.turn_off
  #     entity_id: switch.tv_woonkamer

  noop:
    sequence:
    - delay: '00:00:00'

  woonkamer_switch_on:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.tv_woonkamer

  woonkamer_switch_off:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.tv_woonkamer

  slaapkamer_switch_on:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.tv_slaapkamer

  slaapkamer_switch_off:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.tv_slaapkamer

